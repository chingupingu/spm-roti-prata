# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: RotiPortal

on:
  push:
    branches: [ "autotest" ]
  pull_request:
    branches: [ "autotest" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Authenticate to Google Cloud
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.SERVICE_ACCOUNT_KEY }}'  # Use your secret here
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest firebase-admin python-dotenv
        pip install -r RotiPortal/backend/requirements.txt
    # - name: Set up Google credentials
    #   run: |
    #     echo "${{ secrets.SERVICE_ACCOUNT_KEY }}" > /tmp/serviceAccountKey.json
    #     export GOOGLE_APPLICATION_CREDENTIALS="/tmp/serviceAccountKey.json" >> $GITHUB_ENV
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 RotiPortal/backend/app --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 RotiPortal/backend/app --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --ignore=F821
    - name: Run unit tests
      env:
        GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.SERVICE_ACCOUNT_KEY }}
        # GOOGLE_APPLICATION_CREDENTIALS: /tmp/serviceAccountKey.json
      run: |
        export PYTHONPATH=$PWD/RotiPortal/backend
        python -m pytest RotiPortal/backend/app/tests
